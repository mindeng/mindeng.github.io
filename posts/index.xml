<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>所有文章 - MinCodes</title><link>https://mincodes.com/posts/</link><description>所有文章 | MinCodes</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Sat, 17 Jun 2023 10:16:00 +0000</lastBuildDate><atom:link href="https://mincodes.com/posts/" rel="self" type="application/rss+xml"/><item><title>动态绑定（Dynamic Binding）和词法绑定（Lexical Binding）</title><link>https://mincodes.com/posts/dynamic-lexical-binding-in-elisp/</link><pubDate>Sat, 17 Jun 2023 10:16:00 +0000</pubDate><author>Min Deng</author><guid>https://mincodes.com/posts/dynamic-lexical-binding-in-elisp/</guid><description>今天读了一篇讲 dynamic binding 和 lexical binding 的文章： Dynamic Binding Vs Lexical Binding，讲的挺清楚的，这里大致翻译如下。 绑定 binding 的概念 绑定是名字和值的一种对应关系。在 Lisp 中，可</description></item><item><title>软件设计原则、设计模式总结</title><link>https://mincodes.com/posts/design-patterns/</link><pubDate>Fri, 21 Apr 2023 00:00:00 +0000</pubDate><author>Min Deng</author><guid>https://mincodes.com/posts/design-patterns/</guid><description>前言 本文是笔者对软件设计原则、设计模式的一个疏理，很多内容参考自《设计模式：可复用面 向对象软件的基础》一书（尤其是设计模式部分）。其中也包含</description></item><item><title>用 Emacs 分析日志文件</title><link>https://mincodes.com/posts/use-emacs-to-analyse-log-files/</link><pubDate>Tue, 14 Mar 2023 11:47:00 +0000</pubDate><author>Min Deng</author><guid>https://mincodes.com/posts/use-emacs-to-analyse-log-files/</guid><description>日常开发工作中，经常会需要分析日志文件，有一件趁手的工具会高效很多。 Emacs 正是这样一个工具。 Vim 也有类似的功能（参考 Vim Tips），但就分析日志来说</description></item><item><title>经历八年后，我是如何用 Go 写 HTTP 服务的</title><link>https://mincodes.com/posts/how-i-write-http-services-in-go/</link><pubDate>Wed, 22 Feb 2023 03:15:00 +0000</pubDate><author>Min Deng</author><guid>https://mincodes.com/posts/how-i-write-http-services-in-go/</guid><description>今天读到一篇不错的文章，讲如何用 Go 写 HTTP 服务的，很有同感，翻译如下。 原文链接 A Server struct 一个 Server struct 是一个代表服务的对象，持有所有依赖。 每个组件都有一个</description></item><item><title>Padding Oracle Attack</title><link>https://mincodes.com/posts/padding-oracle-attack/</link><pubDate>Sun, 04 Dec 2022 12:22:00 +0000</pubDate><author>Min Deng</author><guid>https://mincodes.com/posts/padding-oracle-attack/</guid><description>原理阐述 Padding 在密码学中，由于底层加密算法往往是针对固定长度的块来设计的（例如 AES 的 CBC 模式的块大小为 16），所以在对可变长度的明文进行加密时，一般</description></item><item><title>Create Ramdisk on macOS</title><link>https://mincodes.com/posts/create-ramdisk-on-macos/</link><pubDate>Sun, 04 Dec 2022 12:17:00 +0000</pubDate><author>Min Deng</author><guid>https://mincodes.com/posts/create-ramdisk-on-macos/</guid><description>Creating a 1000MB ramdisk:
1 2 3 4 5 6 7 8 9 10 11 12 $ hdiutil attach -nomount ram://$((2048 * 1000)) /dev/disk3 $ diskutil eraseVolume HFS+ RAMDisk /dev/disk3 Started erase on disk3 Unmounting disk Erasing Initialized /dev/rdisk3 as a 1000 MB case-insensitive HFS Plus volume Mounting disk Finished erase on disk3 RAMDisk $ hdiutil detach /dev/disk3</description></item><item><title>Linux Security Tips</title><link>https://mincodes.com/posts/linux-security-tips/</link><pubDate>Sun, 04 Dec 2022 12:15:00 +0000</pubDate><author>Min Deng</author><guid>https://mincodes.com/posts/linux-security-tips/</guid><description>ssh Modify /etc/ssh/sshd_config:
1 2 3 4 5 6 7 8 9 10 11 12 13 # Disable root login PermitRootLogin no # Change the default port Port 12345 # Enable login with key RSAAuthentication yes PubkeyAuthentication yes # Disable login with password UsePAM no PasswordAuthentication no After that, remember to restart sshd: sudo /etc/init.d/ssh restart (for Debian/Ubuntu) or sudo service sshd restart (for CentOS).
iptables Refer to https://wiki.debian.org/iptables* Create the file /etc/iptables.</description></item><item><title>Security Tips：ELF 破解及几点启示</title><link>https://mincodes.com/posts/security-tips-elf-hack/</link><pubDate>Sun, 04 Dec 2022 11:44:00 +0000</pubDate><author>Min Deng</author><guid>https://mincodes.com/posts/security-tips-elf-hack/</guid><description>如何破解一个 ELF 文件：hackme: Deconstructing an ELF File 几点启示： 编译时要使用 strip 选项 避免在代码中使用字符串常量存放敏感信息，strings 工具可以轻易 dump 出</description></item><item><title>Bloom Filter 布隆过滤器</title><link>https://mincodes.com/posts/bloom-filter/</link><pubDate>Sun, 04 Dec 2022 11:11:00 +0000</pubDate><author>Min Deng</author><guid>https://mincodes.com/posts/bloom-filter/</guid><description>Bloom Filter 是由 Bloom 在 1970 年提出的一种多哈希函数映射的快速查找算法。 通常应用在一些需要快速判断某个元素是否属于集合，但是并不严格要求 100% 正确的场合。 HashMap 的问</description></item><item><title>快排 quick sort</title><link>https://mincodes.com/posts/quick-sort/</link><pubDate>Sat, 03 Dec 2022 12:36:00 +0000</pubDate><author>Min Deng</author><guid>https://mincodes.com/posts/quick-sort/</guid><description>快排 quick sort Java version: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 public class Test { public static void main(String[] args)</description></item></channel></rss>